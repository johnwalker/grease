#+PROPERTY: depends "namespaces" "types" "tasks" "TheUnNamedElement" "task streams"
#+PROPERTY: provides "entry point"

* The Entry Point
  If you are writing an executable, rather than a library, then you
  will need to make use of the defined entry point of execution.
  TheUnNamedElement that the compiler defines as the entry point could
  be declared as follows.

#+BEGIN_SRC Grease
(
    [ArgumentSize :argc] StringSize :argl,
    [ArgumentSize :argc] & [] Byte argv
) -> (
    
) # actual task could go here
:Global::main;
#+END_SRC

  Note that even if you change the name of the root namespace, the
  compiler will not look in the root namespace for main.  This makes
  it impossible for an executable to change the root namespace, as you
  cannot assign to a name in a namespace other than your own, unless
  that name is also defined/assigned to in that namespace.

** TODO
   I want to present this information in such a way that it is easy
   and natural for me to then go on to say that any source tree
   lacking an entry point is automatically considered a library, and
   any source tree containing an entry point is automatically
   considered an executable.  Since exporting functions as an
   executable is illegal and nonsensical, if you include an entry
   point on a project that used to be a library, it is likely that you
   will have errors.
